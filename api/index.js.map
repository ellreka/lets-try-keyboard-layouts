{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/ogimages/$id[.png].tsx", "../app/routes/index.tsx", "../app/components/Keyboard/Keyboard.tsx", "../app/hooks/useKeyboard.tsx", "../app/atoms/state.ts", "../app/components/Keyboard/KeySwitch.tsx", "../app/components/Keyboard/CustomKeyPopper.tsx", "../app/components/Modal/ShareModal.tsx", "../app/components/TextArea/TextArea.tsx", "../app/hooks/useInputText.ts", "../app/utils/convertKey.ts", "../app/hooks/useCustomizing.tsx", "../app/hooks/useSelectKeyboard.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import type { EntryContext } from '@remix-run/node'\nimport { RemixServer } from '@remix-run/react'\nimport { renderToString } from 'react-dom/server'\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  )\n\n  responseHeaders.set('Content-Type', 'text/html')\n\n  return new Response('<!DOCTYPE html>' + markup, {\n    headers: responseHeaders,\n    status: responseStatusCode\n  })\n}\n", "import type { MetaFunction } from '@remix-run/node'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration\n} from '@remix-run/react'\nimport { RecoilRoot } from 'recoil'\nimport styles from './styles/app.css'\n\nexport function links() {\n  return [{ rel: 'stylesheet', href: styles }]\n}\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: \"Let's Try Keyboard Layouts!\",\n  viewport: 'width=device-width,initial-scale=1'\n})\n\nexport default function App() {\n  return (\n    <html lang=\"en\" data-theme=\"wireframe\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <RecoilRoot>\n          <Outlet />\n        </RecoilRoot>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  )\n}\n", "import type { LoaderFunction } from '@remix-run/node'\n\nexport const loader: LoaderFunction = async ({ request, context }) => {}\n", "import { useLoaderData } from '@remix-run/react'\nimport type { MetaFunction, LoaderFunction } from '@remix-run/node'\nimport { useState } from 'react'\nimport { Keyboard } from '~/components/Keyboard/Keyboard'\nimport { ShareModal } from '~/components/Modal/ShareModal'\nimport { TextArea } from '~/components/TextArea/TextArea'\nimport { useCustomizing } from '~/hooks/useCustomizing'\nimport { useSelectKeyboard } from '~/hooks/useSelectKeyboard'\n\nexport const meta: MetaFunction<typeof loader> = ({ data, params }) => {\n  console.log(data, params)\n  return {\n    title: data.title ?? 'no title',\n    description: 'This becomes the nice preview on search results.',\n    image: ''\n  }\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url)\n  const title = url.searchParams.get('title')\n  console.log(url)\n  return {\n    title\n  }\n}\n\nexport default function Index() {\n  const data = useLoaderData()\n  console.log(data)\n  const { isCustomizing, handleCreateOriginalKeyboard } = useCustomizing()\n  const {\n    myKeyboardList,\n    tryKeyboardList,\n    myKeyboard,\n    tryKeyboard,\n    handleSelectMyKeyboard,\n    handleSelectTryKeyboard\n  } = useSelectKeyboard()\n\n  const [isOpenModal, setIsOpenModal] = useState(false)\n\n  return (\n    <div className=\"bg-base h-screen flex flex-col\">\n      <header className=\"w-full flex items-center justify-center py-10\">\n        <h1 className=\"text-3xl font-bold text-black\">\n          Let's Try Keyboard Layouts!\n        </h1>\n      </header>\n      <div className=\"max-w-3xl mx-auto bg-neutral h-full p-10\">\n        <div className=\"flex items-center justify-between gap-3\">\n          <div className=\"flex items-center gap-3\">\n            <p className=\"font-bold\">Try</p>\n            <select\n              className=\"select select-bordered w-64\"\n              value={tryKeyboard}\n              onChange={handleSelectTryKeyboard}\n            >\n              {tryKeyboardList.map((item) => (\n                <option key={item.key} value={item.key}>\n                  {item.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"flex items-center gap-3\">\n            <p className=\"font-bold\">Your</p>\n            <select\n              className=\"select select-bordered\"\n              value={myKeyboard}\n              onChange={handleSelectMyKeyboard}\n            >\n              {myKeyboardList.map((item) => (\n                <option key={item.key} value={item.key}>\n                  {item.name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"mt-10\">\n          <Keyboard key={tryKeyboard} isEdit={isCustomizing} />\n        </div>\n        <div className=\"mt-10\">\n          <TextArea />\n        </div>\n        <div className=\"mt-5 flex items-center justify-center\">\n          {isCustomizing ? (\n            <div className=\"flex gap-5\">\n              <button\n                className=\"btn btn-primary gap-2\"\n                onClick={() => {\n                  setIsOpenModal(true)\n                }}\n              >\n                Share\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth={1.5}\n                  stroke=\"currentColor\"\n                  className=\"w-6 h-6\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M7.217 10.907a2.25 2.25 0 100 2.186m0-2.186c.18.324.283.696.283 1.093s-.103.77-.283 1.093m0-2.186l9.566-5.314m-9.566 7.5l9.566 5.314m0 0a2.25 2.25 0 103.935 2.186 2.25 2.25 0 00-3.935-2.186zm0-12.814a2.25 2.25 0 103.933-2.185 2.25 2.25 0 00-3.933 2.185z\"\n                  />\n                </svg>\n              </button>\n            </div>\n          ) : (\n            <button\n              className=\"btn btn-primary\"\n              onClick={handleCreateOriginalKeyboard}\n            >\n              Create original layout\n            </button>\n          )}\n        </div>\n      </div>\n      <ShareModal\n        open={isOpenModal}\n        onClose={() => {\n          console.log('cose')\n          setIsOpenModal(false)\n        }}\n      />\n    </div>\n  )\n}\n", "import clsx from 'clsx'\nimport type { FC } from 'react'\nimport { useEffect, useRef } from 'react'\nimport { useState } from 'react'\nimport { memo } from 'react'\nimport { useKeyboard } from '~/hooks/useKeyboard'\nimport { KeySwitch } from './KeySwitch'\nimport PopperUnstyled from '@mui/base/PopperUnstyled'\nimport { CustomKeyPopper } from './CustomKeyPopper'\n\ninterface Props {\n  isEdit?: boolean\n}\n\nexport const Keyboard: FC<Props> = memo(({ isEdit = false }) => {\n  const { pressedKeyPosition, layout, updateLayout } = useKeyboard()\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (isEdit) {\n      ref.current?.click()\n    }\n  }, [isEdit])\n\n  const handleClickKeySwitch = (e: React.MouseEvent<HTMLDivElement>) => {\n    setAnchorEl(e.currentTarget)\n  }\n  return (\n    <>\n      <div className=\"gap-1 flex flex-col shrink-0\">\n        {layout.map((row, i) => (\n          <div\n            key={i}\n            className={clsx(\n              'flex shrink-0 gap-1 items-center',\n              i === 0 ? 'justify-start' : 'justify-center'\n            )}\n          >\n            {row.map((key, j) => {\n              const id = `${i}-${j}`\n              const keys = Array.isArray(key) ? key : [key]\n              const isPressed =\n                i === pressedKeyPosition.row && j === pressedKeyPosition.col\n              const isEditing = anchorEl?.id === id\n              return (\n                <div\n                  key={j}\n                  ref={i === 2 && j === 0 ? ref : undefined}\n                  id={id}\n                  className={clsx('relative', isEdit ? 'cursor-pointer' : '')}\n                  onClick={isEdit ? handleClickKeySwitch : undefined}\n                >\n                  <KeySwitch\n                    keys={keys}\n                    isPressed={isPressed}\n                    isEditing={isEditing}\n                    isHomePosition={i === 2 && (j === 3 || j === 6)}\n                  />\n                  <PopperUnstyled\n                    id=\"placement-popper\"\n                    open={anchorEl?.id === id}\n                    anchorEl={anchorEl}\n                    placement=\"bottom\"\n                  >\n                    <CustomKeyPopper\n                      handleClose={() => setAnchorEl(null)}\n                      selectedKey={keys}\n                      setSelectedKey={(key, shiftLayoutKey) => {\n                        updateLayout(\n                          {\n                            row: i,\n                            col: j\n                          },\n                          key,\n                          shiftLayoutKey\n                        )\n                      }}\n                    />\n                  </PopperUnstyled>\n                </div>\n              )\n            })}\n          </div>\n        ))}\n      </div>\n    </>\n  )\n})\n\nKeyboard.displayName = 'Keyboard'\n", "import { useEffect } from 'react'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { customKeyboardState, pressedKeyState } from '~/atoms/state'\nimport { tryKeyboardState } from '~/atoms/state'\nimport keyboard from '~/keyboard.json'\nimport type { KeyboardKeys } from '~/type'\n\nexport const useKeyboard = () => {\n  const pressedKey = useRecoilValue(pressedKeyState)\n  const tryKeyboard = useRecoilValue(tryKeyboardState)\n\n  const [customKeyboard, setCustomKeyboard] =\n    useRecoilState(customKeyboardState)\n\n  const layout =\n    tryKeyboard === 'custom' && customKeyboard\n      ? customKeyboard\n      : keyboard[tryKeyboard as KeyboardKeys].layout\n\n  const updateLayout = (\n    position: {\n      row: number\n      col: number\n    },\n    key: string,\n    shiftLayerKey?: string\n  ) => {\n    if (!customKeyboard) return\n    let newCustomKeyboard = JSON.parse(JSON.stringify(customKeyboard))\n    console.log(position, key, shiftLayerKey)\n    console.log(newCustomKeyboard[position.row][position.col])\n    newCustomKeyboard[position.row][position.col] = shiftLayerKey\n      ? [key, shiftLayerKey]\n      : key\n    setCustomKeyboard(newCustomKeyboard)\n  }\n  return {\n    pressedKeyPosition: pressedKey[1],\n    layout,\n    updateLayout\n  }\n}\n", "import { atom } from 'recoil'\n// import { recoilPersist } from 'recoil-persist'\nimport type { KeyboardKeys } from '~/type'\n\n// const { persistAtom } = recoilPersist({\n//   key: 'lets-try-keyboard-layout'\n// })\n\nexport const pressedKeyState = atom<\n  [\n    key: string,\n    position: {\n      row: number | null\n      col: number | null\n      layer: number\n    }\n  ]\n>({\n  key: 'pressedKeyState',\n  default: [\n    '',\n    {\n      row: null,\n      col: null,\n      layer: 0\n    }\n  ]\n})\n\nexport const isCustomizingState = atom<boolean>({\n  key: 'isCustomizingState',\n  default: false\n})\n\nexport const customKeyboardState = atom<Array<string[] | string>[] | null>({\n  key: 'customKeyboardState',\n  default: null\n})\n\nexport const myKeyboardState = atom<KeyboardKeys>({\n  key: 'myKeyboardState',\n  default: 'qwerty'\n  // effects_UNSTABLE: [persistAtom]\n})\n\nexport const tryKeyboardState = atom<KeyboardKeys | 'custom'>({\n  key: 'tryKeyboardState',\n  default: 'dvorak'\n  // effects_UNSTABLE: [persistAtom]\n})\n", "import { FC, memo } from 'react'\nimport clsx from 'clsx'\n\ninterface Props {\n  keys: string[]\n  isPressed?: boolean\n  isHomePosition?: boolean\n  isEditing?: boolean\n}\n\nexport const KeySwitch = memo<Props>(\n  ({ keys, isPressed = false, isHomePosition = false, isEditing = false }) => {\n    const [layer1, layer2] = keys\n    return (\n      <div\n        className={clsx(\n          'w-[50px] h-[50px] relative border rounded-md border-base-content flex flex-col gap-1 items-center justify-center',\n          isPressed\n            ? 'bg-black/30 text-white'\n            : 'bg-white  text-base-content where:shadow-[inset_0_0_0_5px] where:shadow-gray-200',\n          isEditing\n            ? 'border-2 border-dotted border-info bg-info/10 shadow-none'\n            : ''\n        )}\n      >\n        <div className=\"text-sm leading-none\">{layer2}</div>\n        <div className=\"text-xl leading-none\">{layer1.toUpperCase()}</div>\n        {isHomePosition && (\n          <div className=\"absolute left-1/2 -translate-x-1/2 top-[80%] w-[10px] h-[2px] bg-black\"></div>\n        )}\n      </div>\n    )\n  }\n)\n\nKeySwitch.displayName = 'KeySwitch'\n", "import type { FC } from 'react'\n\ntype Props = {\n  selectedKey: string[]\n  setSelectedKey: (key: string, shiftLayerKey?: string) => void\n  handleClose: () => void\n}\n\nexport const CustomKeyPopper: FC<Props> = ({\n  selectedKey,\n  setSelectedKey,\n  handleClose\n}) => {\n  return (\n    <div className=\"relative bg-base-100 shadow-[0_0_15px_0px] rounded-sm p-5 w-[200px]\">\n      <button\n        className=\"absolute right-3 top-3\"\n        onClick={(e) => {\n          handleClose()\n          e.stopPropagation()\n        }}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          strokeWidth={1.5}\n          stroke=\"currentColor\"\n          className=\"w-6 h-6\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M6 18L18 6M6 6l12 12\"\n          />\n        </svg>\n      </button>\n      <div className=\"form-control w-full max-w-xs\">\n        <label htmlFor=\"custom-key\" className=\"label\">\n          <span className=\"label-text font-bold\">Key</span>\n        </label>\n        <select\n          value={selectedKey[0]}\n          onChange={(e) => setSelectedKey(e.target.value, selectedKey[1])}\n          name=\"custom-key\"\n          className=\"select select-bordered select-sm w-full max-w-xs text-md\"\n        >\n          {[...Array(26)].map((_, i) => (\n            <option key={i} value={String.fromCharCode(97 + i)}>\n              {String.fromCharCode(97 + i).toUpperCase()}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"form-control w-full max-w-xs\">\n        <label htmlFor=\"custom-shift-layer\" className=\"label\">\n          <span className=\"label-text font-bold\">Shift Layer</span>\n        </label>\n        <select\n          value={selectedKey[1] ?? ''}\n          onChange={(e) => setSelectedKey(selectedKey[0], e.target.value)}\n          name=\"custom-shift-layer\"\n          className=\"select select-bordered select-sm w-full max-w-xs text-md\"\n        >\n          <option value=\"\" disabled></option>\n          {[...Array(26)].map((_, i) => (\n            <option key={i} value={String.fromCharCode(97 + i)}>\n              {String.fromCharCode(97 + i).toUpperCase()}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  )\n}\n", "import type { FC } from 'react'\nimport { forwardRef } from 'react'\nimport ModalUnstyled from '@mui/base/ModalUnstyled'\nimport clsx from 'clsx'\n\ninterface Props {\n  open: boolean\n  onClose: () => void\n}\n\nconst BackdropUnstyled = forwardRef<\n  HTMLDivElement,\n  { open?: boolean; className: string }\n>((props, ref) => {\n  const { open, className, ...other } = props\n  return (\n    <div\n      className={clsx({ 'MuiBackdrop-open': open }, className)}\n      ref={ref}\n      {...other}\n    />\n  )\n})\n\nBackdropUnstyled.displayName = 'BackdropUnstyled'\n\nexport const ShareModal: FC<Props> = ({ open, onClose }) => {\n  return (\n    <ModalUnstyled\n      open={open}\n      onClose={onClose}\n      classes={{\n        root: 'fixed inset-0 z-50 flex items-center justify-center'\n      }}\n      slotProps={{\n        backdrop: {\n          className: 'fixed inset-0 -z-10 bg-black/50'\n        }\n      }}\n      slots={{\n        backdrop: BackdropUnstyled\n      }}\n    >\n      <div className=\"bg-white w-[70%] h-[50%]\">aaaaaaaaaa</div>\n    </ModalUnstyled>\n  )\n}\n", "import type { FC } from 'react'\nimport { useRef } from 'react'\nimport { useEffect } from 'react'\nimport { useInputText } from '~/hooks/useInputText'\n\ninterface Props {}\n\nexport const TextArea: FC<Props> = () => {\n  const { handleChange, inputText, handleKeyDown, handleKeyUp } = useInputText()\n\n  const ref = useRef<HTMLTextAreaElement>(null)\n\n  useEffect(() => {\n    ref.current?.select()\n  }, [])\n\n  return (\n    <div className=\"w-full flex justify-center items-center gap-2\">\n      <textarea\n        ref={ref}\n        placeholder=\"Let's try Keyboard Layouts!\"\n        value={inputText}\n        onKeyDown={handleKeyDown}\n        onKeyUp={handleKeyUp}\n        onChange={handleChange}\n        className=\"w-full h-[200px] textarea textarea-bordered text-lg focus:outline-info-content\"\n      />\n    </div>\n  )\n}\n", "import type React from 'react'\nimport { useCallback, useState } from 'react'\nimport { useRecoilState, useRecoilValue, useResetRecoilState } from 'recoil'\nimport { pressedKeyState } from '~/atoms/state'\nimport { myKeyboardState, tryKeyboardState } from '~/atoms/state'\nimport { convertKey } from '~/utils/convertKey'\nimport keyboard from '~/keyboard.json'\nimport { customKeyboardState } from '~/atoms/state'\n\nexport const useInputText = () => {\n  const [pressedKey, setPressedKey] = useRecoilState(pressedKeyState)\n  const resetPressedKey = useResetRecoilState(pressedKeyState)\n  const myKeyboard = useRecoilValue(myKeyboardState)\n  const tryKeyboard = useRecoilValue(tryKeyboardState)\n  const customKeyboard = useRecoilValue(customKeyboardState)\n  const [readonly, setReadonly] = useState(true)\n  const [inputText, setInputText] = useState('')\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      if (!readonly) {\n        const { value } = e.target\n        console.log(value)\n        setInputText(value)\n      }\n    },\n    [readonly]\n  )\n\n  const handleKeyDown = useCallback(\n    (e: React.KeyboardEvent) => {\n      const { key, ctrlKey, shiftKey, altKey, metaKey } = e\n      if (key.length === 1) {\n        if (ctrlKey || altKey || metaKey) {\n          // do nothing\n        } else {\n          setReadonly(true)\n          const [convertedKey, position] = convertKey(\n            key,\n            keyboard[myKeyboard].layout,\n            tryKeyboard === 'custom' && customKeyboard != null\n              ? customKeyboard\n              : // @ts-ignore\n                keyboard[tryKeyboard].layout\n          )\n          console.log({ convertedKey, key })\n          setPressedKey([convertedKey, position])\n          setInputText(\n            (prev) =>\n              prev + (shiftKey ? convertedKey.toUpperCase() : convertedKey)\n          )\n        }\n      } else if (key === 'Backspace' || key === 'Delete' || key === 'Enter') {\n        setReadonly(false)\n      } else {\n        setReadonly(true)\n      }\n    },\n    [myKeyboard, tryKeyboard, customKeyboard]\n  )\n\n  const handleKeyUp = useCallback(() => {\n    resetPressedKey()\n    setReadonly(true)\n  }, [])\n\n  return {\n    inputText,\n    handleChange,\n    handleKeyDown,\n    handleKeyUp\n  }\n}\n", "import type { KeyboardLayout } from '~/type'\n\nexport const convertKey = (\n  key: string,\n  myKeyboard: KeyboardLayout,\n  tryKeyboard: KeyboardLayout\n): [\n  key: string,\n  position: {\n    row: number | null\n    col: number | null\n    layer: number\n  }\n] => {\n  const myKeyboardLayout = myKeyboard\n  const tryKeyboardLayout = tryKeyboard\n\n  const toLowerKey = key.toLowerCase()\n  let rowIndex = null\n  let colIndex = null\n  let layerIndex = 0\n  let found = false\n  for (let i = 0; i < myKeyboardLayout.length; i++) {\n    for (let j = 0; j < myKeyboardLayout[i].length; j++) {\n      if (typeof myKeyboardLayout[i][j] === 'string') {\n        if (myKeyboardLayout[i][j] === toLowerKey) {\n          rowIndex = i\n          colIndex = j\n          found = true\n          break\n        }\n      } else {\n        for (let k = 0; k < myKeyboardLayout[i][j].length; k++) {\n          if (myKeyboardLayout[i][j][k] === toLowerKey) {\n            rowIndex = i\n            colIndex = j\n            layerIndex = k\n            found = true\n            break\n          }\n        }\n      }\n    }\n    if (found) {\n      break\n    }\n  }\n  if (found && rowIndex !== null && colIndex !== null) {\n    return [\n      tryKeyboardLayout[rowIndex][colIndex][layerIndex],\n      { row: rowIndex, col: colIndex, layer: layerIndex }\n    ]\n  }\n  return [key, { row: null, col: null, layer: 0 }]\n}\n", "import { useRecoilState, useSetRecoilState } from 'recoil'\nimport { customKeyboardState, isCustomizingState } from '~/atoms/state'\nimport keyboard from '~/keyboard.json'\n\nexport const useCustomizing = () => {\n  const [isCustomizing, setIsCustomizing] = useRecoilState(isCustomizingState)\n  const setCustomizeKeyboard = useSetRecoilState(customKeyboardState)\n  const handleCreateOriginalKeyboard = () => {\n    setCustomizeKeyboard((prev) => {\n      if (prev != null) return prev\n      return keyboard['qwerty'].layout\n    })\n    setIsCustomizing(true)\n  }\n  return {\n    isCustomizing,\n    handleCreateOriginalKeyboard\n  }\n}\n", "import { useRecoilState, useRecoilValue } from 'recoil'\nimport {\n  customKeyboardState,\n  isCustomizingState,\n  myKeyboardState,\n  tryKeyboardState\n} from '~/atoms/state'\nimport type { KeyboardKeys } from '~/type'\nimport keyboard from '~/keyboard.json'\nimport { useEffect } from 'react'\n\nconst keyboardList = Object.entries(keyboard).map(([key, value]) => ({\n  key,\n  name: value.name\n}))\n\nexport const useSelectKeyboard = () => {\n  const [myKeyboard, setMyKeyboard] = useRecoilState(myKeyboardState)\n  const [tryKeyboard, setTryKeyboard] = useRecoilState(tryKeyboardState)\n  const [isCustomizing, setIsCustomizing] = useRecoilState(isCustomizingState)\n  const customKeyboard = useRecoilValue(customKeyboardState)\n  console.log(customKeyboard)\n  const myKeyboardList = keyboardList\n  const tryKeyboardList = customKeyboard\n    ? [...keyboardList, { key: 'custom', name: 'Custom' }]\n    : keyboardList\n\n  // FIXME\n  useEffect(() => {\n    if (isCustomizing) {\n      setTryKeyboard('custom')\n    }\n  }, [isCustomizing])\n\n  const handleSelectMyKeyboard = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = e.target\n    console.log(value)\n    setMyKeyboard(value as KeyboardKeys)\n  }\n\n  const handleSelectTryKeyboard = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = e.target\n    setIsCustomizing(false)\n    setTryKeyboard(value as KeyboardKeys)\n  }\n\n  return {\n    myKeyboardList,\n    tryKeyboardList,\n    myKeyboard,\n    tryKeyboard,\n    handleSelectMyKeyboard,\n    handleSelectTryKeyboard\n  }\n}\n", "export default {'version':'a6560d13','entry':{'module':'/build/entry.client-VOT6GU2W.js','imports':['/build/_shared/chunk-V6VONLRJ.js','/build/_shared/chunk-42Z7WWMI.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-PLJZNOXU.js','imports':['/build/_shared/chunk-KNRY73ST.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-FQK4SGVD.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/ogimages/$id[.png]':{'id':'routes/ogimages/$id[.png]','parentId':'root','path':'ogimages/:id.png','index':undefined,'caseSensitive':undefined,'module':'/build/routes/ogimages/$id[.png]-MLN3HIYD.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-A6560D13.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/ogimages/$id[.png].tsx\";\nimport * as route2 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_meta\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/ogimages/$id[.png]\": {\n      id: \"routes/ogimages/$id[.png]\",\n      parentId: \"root\",\n      path: \"ogimages/:id.png\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "loader", "meta", "import_react", "import_clsx", "import_react", "import_recoil", "import_recoil", "import_react", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "clsx", "PopperUnstyled", "key", "import_react", "import_clsx", "import_jsx_dev_runtime", "clsx", "ModalUnstyled", "import_react", "import_react", "import_recoil", "import_jsx_dev_runtime", "import_recoil", "import_recoil", "import_react", "import_jsx_dev_runtime", "meta", "loader"]
}
